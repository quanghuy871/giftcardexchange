define(["jquery","../utils"],function($,Utils){function Search(){}return Search.prototype.render=function(decorated){var $rendered=decorated.call(this),$search=$('<span class="select2-search select2-search--dropdown"><input class="select2-search__field" type="search" tabindex="-1" autocomplete="off" autocorrect="off" autocapitalize="none" spellcheck="false" role="textbox" /></span>');return this.$searchContainer=$search,this.$search=$search.find("input"),$rendered.prepend($search),$rendered},Search.prototype.bind=function(decorated,container,$container){var self=this;decorated.call(this,container,$container),this.$search.on("keydown",function(evt){self.trigger("keypress",evt),self._keyUpPrevented=evt.isDefaultPrevented()}),this.$search.on("input",function(evt){$(this).off("keyup")}),this.$search.on("keyup input",function(evt){self.handleSearch(evt)}),container.on("open",function(){self.$search.attr("tabindex",0),self.$search.focus(),window.setTimeout(function(){self.$search.focus()},0)}),container.on("close",function(){self.$search.attr("tabindex",-1),self.$search.val(""),self.$search.blur()}),container.on("focus",function(){container.isOpen()||self.$search.focus()}),container.on("results:all",function(params){if(null==params.query.term||""===params.query.term){self.showSearch(params)?self.$searchContainer.removeClass("select2-search--hide"):self.$searchContainer.addClass("select2-search--hide")}})},Search.prototype.handleSearch=function(evt){if(!this._keyUpPrevented){var input=this.$search.val();this.trigger("query",{term:input})}this._keyUpPrevented=!1},Search.prototype.showSearch=function(_,params){return!0},Search});