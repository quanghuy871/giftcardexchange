define(["./base","../utils","jquery"],function(BaseAdapter,Utils,$){function SelectAdapter($element,options){this.$element=$element,this.options=options,SelectAdapter.__super__.constructor.call(this)}return Utils.Extend(SelectAdapter,BaseAdapter),SelectAdapter.prototype.current=function(callback){var data=[],self=this;this.$element.find(":selected").each(function(){var $option=$(this),option=self.item($option);data.push(option)}),callback(data)},SelectAdapter.prototype.select=function(data){var self=this;if(data.selected=!0,$(data.element).is("option"))return data.element.selected=!0,void this.$element.trigger("change");if(this.$element.prop("multiple"))this.current(function(currentData){var val=[];(data=[data]).push.apply(data,currentData);for(var d=0;d<data.length;d++){var id=data[d].id;-1===$.inArray(id,val)&&val.push(id)}self.$element.val(val),self.$element.trigger("change")});else{var val=data.id;this.$element.val(val),this.$element.trigger("change")}},SelectAdapter.prototype.unselect=function(data){var self=this;if(this.$element.prop("multiple")){if(data.selected=!1,$(data.element).is("option"))return data.element.selected=!1,void this.$element.trigger("change");this.current(function(currentData){for(var val=[],d=0;d<currentData.length;d++){var id=currentData[d].id;id!==data.id&&-1===$.inArray(id,val)&&val.push(id)}self.$element.val(val),self.$element.trigger("change")})}},SelectAdapter.prototype.bind=function(container,$container){var self=this;this.container=container,container.on("select",function(params){self.select(params.data)}),container.on("unselect",function(params){self.unselect(params.data)})},SelectAdapter.prototype.destroy=function(){this.$element.find("*").each(function(){Utils.RemoveData(this)})},SelectAdapter.prototype.query=function(params,callback){var data=[],self=this;this.$element.children().each(function(){var $option=$(this);if($option.is("option")||$option.is("optgroup")){var option=self.item($option),matches=self.matches(params,option);null!==matches&&data.push(matches)}}),callback({results:data})},SelectAdapter.prototype.addOptions=function($options){Utils.appendMany(this.$element,$options)},SelectAdapter.prototype.option=function(data){var option;data.children?(option=document.createElement("optgroup")).label=data.text:void 0!==(option=document.createElement("option")).textContent?option.textContent=data.text:option.innerText=data.text,void 0!==data.id&&(option.value=data.id),data.disabled&&(option.disabled=!0),data.selected&&(option.selected=!0),data.title&&(option.title=data.title);var $option=$(option),normalizedData=this._normalizeItem(data);return normalizedData.element=option,Utils.StoreData(option,"data",normalizedData),$option},SelectAdapter.prototype.item=function($option){var data={};if(null!=(data=Utils.GetData($option[0],"data")))return data;if($option.is("option"))data={id:$option.val(),text:$option.text(),disabled:$option.prop("disabled"),selected:$option.prop("selected"),title:$option.prop("title")};else if($option.is("optgroup")){data={text:$option.prop("label"),children:[],title:$option.prop("title")};for(var $children=$option.children("option"),children=[],c=0;c<$children.length;c++){var $child=$($children[c]),child=this.item($child);children.push(child)}data.children=children}return data=this._normalizeItem(data),data.element=$option[0],Utils.StoreData($option[0],"data",data),data},SelectAdapter.prototype._normalizeItem=function(item){item!==Object(item)&&(item={id:item,text:item});return null!=(item=$.extend({},{text:""},item)).id&&(item.id=item.id.toString()),null!=item.text&&(item.text=item.text.toString()),null==item._resultId&&item.id&&null!=this.container&&(item._resultId=this.generateResultId(this.container,item)),$.extend({},{selected:!1,disabled:!1},item)},SelectAdapter.prototype.matches=function(params,data){return this.options.get("matcher")(params,data)},SelectAdapter});