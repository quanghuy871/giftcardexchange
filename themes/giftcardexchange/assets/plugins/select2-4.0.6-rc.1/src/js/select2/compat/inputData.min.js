define(["jquery","../utils"],function($,Utils){function InputData(decorated,$element,options){this._currentData=[],this._valueSeparator=options.get("valueSeparator")||",","hidden"===$element.prop("type")&&options.get("debug")&&console&&console.warn&&console.warn("Select2: Using a hidden input with Select2 is no longer supported and may stop working in the future. It is recommended to use a `<select>` element instead."),decorated.call(this,$element,options)}return InputData.prototype.current=function(_,callback){function getSelected(data,selectedIds){var selected=[];return data.selected||-1!==$.inArray(data.id,selectedIds)?(data.selected=!0,selected.push(data)):data.selected=!1,data.children&&selected.push.apply(selected,getSelected(data.children,selectedIds)),selected}for(var selected=[],d=0;d<this._currentData.length;d++){var data=this._currentData[d];selected.push.apply(selected,getSelected(data,this.$element.val().split(this._valueSeparator)))}callback(selected)},InputData.prototype.select=function(_,data){if(this.options.get("multiple")){var value=this.$element.val();value+=this._valueSeparator+data.id,this.$element.val(value),this.$element.trigger("change")}else this.current(function(allData){$.map(allData,function(data){data.selected=!1})}),this.$element.val(data.id),this.$element.trigger("change")},InputData.prototype.unselect=function(_,data){var self=this;data.selected=!1,this.current(function(allData){for(var values=[],d=0;d<allData.length;d++){var item=allData[d];data.id!=item.id&&values.push(item.id)}self.$element.val(values.join(self._valueSeparator)),self.$element.trigger("change")})},InputData.prototype.query=function(_,params,callback){for(var results=[],d=0;d<this._currentData.length;d++){var data=this._currentData[d],matches=this.matches(params,data);null!==matches&&results.push(matches)}callback({results:results})},InputData.prototype.addOptions=function(_,$options){var options=$.map($options,function($option){return Utils.GetData($option[0],"data")});this._currentData.push.apply(this._currentData,options)},InputData});